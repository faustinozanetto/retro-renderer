#shader vertex
#version 450 core

layout (location = 0) in vec3 a_pos;
layout (location = 1) in vec2 a_tex_coord;

layout (location = 0) out vec2 o_tex_coord;

void main() {
    o_tex_coord = a_tex_coord;
    gl_Position = vec4(a_pos, 1.0f);
}

#shader fragment
#version 450 core

layout (location = 0) out vec3 frag_color;

layout (location = 0) in vec2 o_tex_coord;

layout (binding = 0) uniform sampler2D u_texture;
uniform vec2 u_source_res;

void main()
{
    vec2 source_texel_size = 1.0 / u_source_res;
    float x = source_texel_size.x;
    float y = source_texel_size.y;

    vec3 a = texture(u_texture, vec2(o_tex_coord.x - 2*x, o_tex_coord.y + 2*y)).rgb;
    vec3 b = texture(u_texture, vec2(o_tex_coord.x,       o_tex_coord.y + 2*y)).rgb;
    vec3 c = texture(u_texture, vec2(o_tex_coord.x + 2*x, o_tex_coord.y + 2*y)).rgb;

    vec3 d = texture(u_texture, vec2(o_tex_coord.x - 2*x, o_tex_coord.y)).rgb;
    vec3 e = texture(u_texture, vec2(o_tex_coord.x,       o_tex_coord.y)).rgb;
    vec3 f = texture(u_texture, vec2(o_tex_coord.x + 2*x, o_tex_coord.y)).rgb;

    vec3 g = texture(u_texture, vec2(o_tex_coord.x - 2*x, o_tex_coord.y - 2*y)).rgb;
    vec3 h = texture(u_texture, vec2(o_tex_coord.x,       o_tex_coord.y - 2*y)).rgb;
    vec3 i = texture(u_texture, vec2(o_tex_coord.x + 2*x, o_tex_coord.y - 2*y)).rgb;

    vec3 j = texture(u_texture, vec2(o_tex_coord.x - x, o_tex_coord.y + y)).rgb;
    vec3 k = texture(u_texture, vec2(o_tex_coord.x + x, o_tex_coord.y + y)).rgb;
    vec3 l = texture(u_texture, vec2(o_tex_coord.x - x, o_tex_coord.y - y)).rgb;
    vec3 m = texture(u_texture, vec2(o_tex_coord.x + x, o_tex_coord.y - y)).rgb;

    frag_color = e*0.125;
    frag_color += (a+c+g+i)*0.03125;
    frag_color += (b+d+f+h)*0.0625;
    frag_color += (j+k+l+m)*0.125;
}