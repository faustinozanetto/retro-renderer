#shader vertex
#version 450 core

layout (location = 0) in vec3 a_pos;
layout (location = 1) in vec3 a_color;

layout (location = 0) out vec3 o_color;

layout(set = 0, binding = 0) uniform camera_ubo 
{    
	mat4 view_matrix;
    mat4 projection_matrix;
    vec3 position;
} camera;

void main() {
    o_color = a_color;
    gl_Position = camera.projection_matrix * camera.view_matrix  * vec4(a_pos, 1.0f);
    gl_Position.z = 2.0 * gl_Position.z - gl_Position.w;
}

#shader fragment
#version 450 core

layout (location = 0) out vec4 frag_color;

layout (location = 0) in vec3 o_color;

void main()
{
    frag_color = vec4(o_color, 1.0);
}